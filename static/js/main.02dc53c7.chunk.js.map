{"version":3,"sources":["App.module.css","Form/Form.module.css","Form/Form.js","Contacts/ContactListItem.js","Contacts/ContactsList.js","Filter/Filter.js","App.js","index.js","Contacts/ContactsList.module.css","Filter/Filter.module.css"],"names":["module","exports","Form","onClick","useState","name","setName","number","setNumber","handleChange","e","currentTarget","value","className","styles","form_contact","form_label","onChange","input_contact","type","pattern","title","required","btn_contact","ContactListItem","contacts","handleDeleteContact","map","key","contact_item","contact_btn","ContactList","contact_list","Filter","filter","handleFilter","filter_box","filter_label","input_filter","App","window","localStorage","getItem","JSON","parse","setContacts","setFilter","useEffect","setItem","stringify","find","contact","alert","prev","shortid","generate","normalizeFilter","toLowerCase","includes","foundContacts","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.02dc53c7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__21Oxx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_contact\":\"Form_form_contact__19Llg\",\"form_label\":\"Form_form_label__1bqle\",\"input_contact\":\"Form_input_contact__jCjPl\",\"btn_contact\":\"Form_btn_contact__2SWyd\",\"filter_label\":\"Form_filter_label__1lFk8\"};","import PropTypes from \"prop-types\";\nimport { useState } from \"react\";\nimport styles from \"./Form.module.css\";\n\nfunction Form({ onClick }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  function handleChange(e) {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  }\n\n  function handleClick() {\n    onClick(name, number);\n    resetState();\n  }\n\n  function resetState() {\n    setName(\"\");\n    setNumber(\"\");\n  }\n\n  return (\n    <form className={styles.form_contact}>\n      <label className={styles.form_label}>\n        Name\n        <input\n          onChange={handleChange}\n          value={name}\n          className={styles.input_contact}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label className={styles.form_label}>\n        Number\n        <input\n          onChange={handleChange}\n          value={number}\n          className={styles.input_contact}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <button\n        type=\"button\"\n        className={styles.btn_contact}\n        onClick={handleClick}\n      >\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nForm.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Form;\n","import PropTypes from \"prop-types\";\nimport styles from \"./ContactsList.module.css\"\n\nconst ContactListItem = ({ contacts, handleDeleteContact }) => {\n    return contacts.map(({key,name,number}) => {\n       return (\n    <li key={key} className={styles.contact_item}>\n      <span>{name}</span>: <span>{number}</span>\n      <button className={styles.contact_btn} onClick={() => handleDeleteContact(key)}>\n        Delete\n      </button>\n    </li>\n  );\n   })\n  \n};\n\nContactListItem.propTypes = {\n    contacts: PropTypes.arrayOf(PropTypes.shape({\n        key: PropTypes.node.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired\n    })),\n    handleDeleteContact: PropTypes.func.isRequired\n}\n\n\nexport { ContactListItem };\n","import PropTypes from \"prop-types\";\nimport { ContactListItem } from \"./ContactListItem\"\nimport styles from \"./ContactsList.module.css\"\n\nconst ContactList = ({ contacts, handleDeleteContact }) => {\n    return (\n        <ul className={styles.contact_list}>\n                    <ContactListItem\n                        contacts={contacts}\n                        handleDeleteContact={handleDeleteContact}\n                    />\n          </ul>\n    )\n}\n\nContactList.propTypes = {\n    contacts: PropTypes.arrayOf(PropTypes.object.isRequired),\n    handleDeleteContact: PropTypes.func.isRequired\n}\nexport default ContactList","import PropTypes from \"prop-types\";\nimport styles from \"./Filter.module.css\"\n\nconst Filter = ({filter, handleFilter}) => {\n    return (\n        <div className={styles.filter_box}>\n             <label className={styles.filter_label}>\n        Find contacts by name\n        <input\n          onChange={handleFilter}\n          value={filter}\n          className={styles.input_filter}\n          type=\"text\"\n        />\n      </label>\n        </div>\n       \n    )\n}\n\nFilter.propTypes = {\n    filter: PropTypes.string,\n    handleFilter: PropTypes.func.isRequired\n}\n\nexport default Filter","import { useState, useEffect } from \"react\";\nimport shortid from \"shortid\";\nimport Form from \"./Form/Form.js\";\nimport ContactList from \"./Contacts/ContactsList\";\nimport Filter from \"./Filter/Filter\";\nimport styles from \"./App.module.css\";\n\nfunction App() {\n  const [contacts, setContacts] = useState(() => localStorage() ?? []);\n  const [filter, setFilter] = useState(\"\");\n\n  function localStorage() {\n    const contacts = window.localStorage.getItem(\"contacts\");\n    const parseContacts = JSON.parse(contacts);\n    return parseContacts;\n  }\n\n  useEffect(() => {\n    if (contacts !== []) {\n      window.localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n    }\n  }, [contacts]);\n\n  function handleFilter(e) {\n    const { value } = e.currentTarget;\n    setFilter(value);\n  }\n\n  function handleDeleteContact(contactId) {\n    setContacts(contacts.filter((contact) => contact.key !== contactId));\n  }\n\n  function foundContacts() {\n    const normalizeFilter = filter.toLowerCase();\n    if (contacts) {\n      return contacts.filter((contact) => {\n        return contact.name.toLowerCase().includes(normalizeFilter);\n      });\n    }\n  }\n\n  function handleAddContact(name, number) {\n    if (\n      contacts.find((contact) => {\n        return contact.name === name || contact.number === number;\n      })\n    )\n      return alert(`${name} is already in contacts`);\n\n    if (name === \"\" || number === \"\") return alert(\"Please enter correct name\");\n    else {\n      setContacts((prev) => [\n        ...prev,\n        {\n          key: shortid.generate(),\n          name: name,\n          number: number,\n        },\n      ]);\n    }\n  }\n\n  return (\n    <div className={styles.App}>\n      <h1>Phonebook</h1>\n      <Form onClick={handleAddContact} />\n      <h2 className=\"contact_title\">Contacts</h2>\n      <Filter filter={filter} handleFilter={handleFilter} />\n      <ContactList\n        contacts={foundContacts()}\n        handleDeleteContact={handleDeleteContact}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_list\":\"ContactsList_contact_list__1B3Nt\",\"contact_item\":\"ContactsList_contact_item__26BuB\",\"contact_btn\":\"ContactsList_contact_btn__1p2Cd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter_label\":\"Filter_filter_label__2R7H0\",\"input_filter\":\"Filter_input_filter__qUYao\"};"],"sourceRoot":""}